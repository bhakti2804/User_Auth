credentials for sql injection attack : 

testuser1' -- 
abc

testuser1 
anything' OR 1=1 -- 

testuser1
abc' union select * from users -- 



credentials for cross site scripting

<script>alert("hello")</script>
test

<div><iframe src="http://www.facebook.com"/></div>
test










login method with regex:
		if login_params[:username].match(/(\%27)|(\')|(\-\-)|(\%23)|(#)/) or login_params[:password].match(/(\%27)|(\')|(\-\-)|(\%23)|(#)/)
			flash[:login_errors] = ['SQL Injection detected'] 
			redirect_to '/'
		elsif login_params[:username].match(/((\%3C)|<)[^\n]+((\%3E)|>)/) or login_params[:password].match(/((\%3C)|<)[^\n]+((\%3E)|>)/)
			flash[:login_errors] = ['Cross Site Scripting detected'] 
			redirect_to '/'
		else
			array = User.find_by_sql("
			  SELECT * FROM users
			  where username = '#{login_params[:username]}' and password = '#{login_params[:password]}';
			")
			
			@user = User.find_by(id: array.map(&:id))
			if @user 
				session[:user_id] = @user.id
				redirect_to "/welcome/#{@user.id}"
			else
				flash[:login_errors] = ['Invalid credentials'] 
				redirect_to '/'
			end
		end

login method without regex:
		array = User.find_by_sql("
		  SELECT * FROM users
		  where username = '#{login_params[:username]}' and password = '#{login_params[:password]}';
		")
		
		@user = User.find_by(id: array.map(&:id))
		if @user 
			session[:user_id] = @user.id
			redirect_to "/welcome/#{@user.id}"
		else
			flash[:login_errors] = ['Invalid credentials'] 
			redirect_to '/'
		end



signup method with regex:
		if user_params[:username].match(/(\%27)|(\')|(\-\-)|(\%23)|(#)/) or user_params[:password].match(/(\%27)|(\')|(\-\-)|(\%23)|(#)/)
			flash[:register_errors] = ['SQL Injection detected'] 
			redirect_to '/signup'
		elsif user_params[:username].match(/((\%3C)|<)[^\n]+((\%3E)|>)/) or user_params[:password].match(/((\%3C)|<)[^\n]+((\%3E)|>)/)
			flash[:register_errors] = ['Cross Site Scripting detected'] 
			redirect_to '/signup'
		else
			user = User.create(user_params)
			if user.save
				redirect_to "/welcome/#{user.id}"
			else
				flash[:register_errors] = user.errors.full_messages
				redirect_to '/signup'
			end
		end


signup method without regex:
		user = User.create(user_params)
		if user.save
			redirect_to "/welcome/#{user.id}"
		else
			flash[:register_errors] = user.errors.full_messages
			redirect_to '/signup'
		end	